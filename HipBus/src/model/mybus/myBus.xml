<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MyBus">
	<select id="getLastBoard" parameterType="String" resultType="model.BoardDto">
		select * from HB_Board where num=(select max(num) from HB_Board where driver=#{driver})
	</select>
	<insert id="appendBoard" parameterType="model.BoardDto">
		insert into HB_Board values 
		(#{driver,jdbcType=VARCHAR}, hb_boardseq.nextVal, #{email,jdbcType=VARCHAR}, 
		#{nick,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, sysdate)
	</insert>
	<delete id="deleteBoard" parameterType="int">
		delete from HB_Board where num = #{num}
	</delete>
	<update id="modifyBoard" parameterType="model.BoardDto">
		update HB_Board set content=#{content} where num=#{num}
	</update>
	<select id="getMember" parameterType="String"  resultType="model.MemberDto">
		select * from HB_member where email=#{email,jdbcType=VARCHAR}
	</select>
	<select id="getChannelid" parameterType="String"  resultType="String">
		select channel_id from HB_Channel where driver=#{driver,jdbcType=VARCHAR}
	</select>
	<select id="getBoards" parameterType="map" resultType="model.BoardDto">
		select * from (select driver, num, email, nick, content, reg_date, rownum r 
		from hb_board where driver=#{driver} order by reg_date desc)
		where r &lt;= (select max(r) from (select driver, num, email, nick, content, reg_date, rownum r 
		from hb_board where driver=#{driver} order by reg_date desc))
		and r &gt; (select max(r) from (select driver, num, email, nick, content, reg_date, rownum r 
		from hb_board where driver=#{driver} order by reg_date desc))-#{boardCount}
	</select>
	<select id="isHop" parameterType="map" resultType="int">
		select count(*) from hb_passengers where driver=#{driver} and email=#{email}
	</select>
	<insert id="hopOn" parameterType="map">
		insert into hb_passengers values (#{driver},#{email})
	</insert>
	<delete id="hopOff" parameterType="map">
		delete from hb_passengers where driver=#{driver} and email=#{email}
	</delete>
	<!-- <select id="getMyCrews" parameterType="String" resultType="model.MyCrewDto">
		select distinct c.crewid, c.crewname, email 
		from hb_crewmember m, hb_crew c
		where m.crewid=c.crewid
		and m.crewid in (select crewid from hb_crewmember where email=#{driver})
	</select>
	 -->
	 <select id="getMyCrews" parameterType="String" resultType="model.CrewDto">
	 	select c.crewid, c.crewname
		from hb_crewmember m, hb_crew c
		where m.crewid=c.crewid
		and m.email=#{driver}
	 </select>
	 <select id="getMyMembers" parameterType="Map" resultType="model.CrewMemberDto">
	 	select c.email,c.crewid,c.leader,m.nick 
	 	from hb_crewmember c, hb_member m
		where c.email=m.email 
		and crewid=#{crewid} 
		and c.email!=#{driver}
		order by c.leader desc
	 </select>
	 <select id="getTags" parameterType="String" resultType="String">
	 	select tag from hb_tag where driver=#{driver}
	 </select>
	 <select id="getPassengers" parameterType="String" resultType="model.MemberDto">
		select * from hb_member where email in (select email from hb_passengers where driver=#{driver})
	 </select>
	 
<!-- myArticles -->
	<select id="getArticleCount" parameterType="String" resultType="int">
		select count(*) from hb_station where email=#{driver}
	</select>
	<select id="getArticles" parameterType="map" resultType="model.StationDto">
		select num,email,category,nick,subject,content,
		likenum,readcount,reg_date,
		 r from( select num,email,category,nick,subject,content,
		likenum,readcount,reg_date, rownum r from
		(select * from HB_Station order by num desc)
		order by num desc ) where r &gt;= #{start} and r &lt;= #{end} and email=#{driver}
	</select>
	
<!-- myBusUpcoming -->
	<insert id="writeUpcoming" parameterType="model.UpcomingDto">
		insert into hb_upcoming values
		(hb_upcomingseq.nextVal,#{driver,jdbcType=VARCHAR},#{nick,jdbcType=VARCHAR},#{subject,jdbcType=VARCHAR},
		#{perf_place,jdbcType=VARCHAR},#{perf_date,jdbcType=DATE},#{perf_cast,jdbcType=VARCHAR},#{perf_runningtime,jdbcType=INTEGER},#{perf_price,jdbcType=INTEGER},
		#{content,jdbcType=VARCHAR},#{imglocation,jdbcType=INTEGER},0,sysdate)
	</insert>
	<select id="getUpcoming" parameterType="int" resultType="model.UpcomingDto">
		select * from hb_upcoming where num=#{num}
	</select>
	<select id="getUpcomings" parameterType="String" resultType="model.UpcomingDto">
		select * from hb_upcoming where driver=#{driver}
	</select>
	<select id="getNewUpcoming" parameterType="String" resultType="model.UpcomingDto">
		select * from hb_upcoming 
		where driver=#{driver} 
		and num=(select max(num) from hb_upcoming where driver=#{driver})
	</select>
	<update id="modUpcomingWith" parameterType="model.UpcomingDto">
		update hb_upcoming set subject=#{subject}, perf_place=#{perf_place}, perf_date=#{perf_date}, perf_cast=#{perf_cast}, 
		perf_runningtime=#{perf_runningtime}, perf_price=#{perf_price}, content=#{content}, imglocation=#{imglocation}
		where num=#{num}
	</update>
	<update id="modUpcomingWithout" parameterType="model.UpcomingDto">
		update hb_upcoming set subject=#{subject}, perf_place=#{perf_place}, perf_date=#{perf_date},
		perf_cast=#{perf_cast}, perf_runningtime=#{perf_runningtime}, perf_price=#{perf_price}, content=#{content}
		where num=#{num}
	</update>
	<delete id="delUpcoming" parameterType="int">
		delete from hb_upcoming where num=#{num}
	</delete>

<!-- editProfile -->
	<delete id="deleteEmail" parameterType="String">
		delete from HB_Member where email=#{email}
	</delete>
	
	<delete id="deleteDriver" parameterType="String">
		delete from HB_Driver where driver=#{driver}
	</delete>
<!-- myBusWanted -->
	<insert id="insertWantedArticle" parameterType="model.WantedDto">
		insert into hb_wanted values(#{driver}, hb_wantedseq.nextval, #{nick}, #{subject}, #{content}, #{imglocation,jdbcType=VARCHAR}, #{duedate}, 0, #{reg_date})
	</insert>
	<select id="getWantedArticle" parameterType="int" resultType="model.WantedDto">
		select * from hb_wanted where num=#{num}
	</select>
	<select id="getWantedArticles" parameterType="String" resultType="model.WantedDto">
		select * from hb_wanted where driver=#{driver} order by duedate
	</select>
	<update id="modifyWantedWholeArticle" parameterType="model.WantedDto">
		update hb_wanted set subject = #{subject}, content=#{content}, imglocation = #{imglocation}, duedate=#{duedate}
		where num=#{num}
	</update>
	<update id="modifyWantedArticle" parameterType="model.WantedDto">
		update hb_wanted set subject = #{subject}, content=#{content}, duedate=#{duedate}
		where num=#{num}
	</update>
	<delete id="deleteWantedArticle" parameterType="int">
		delete hb_wanted where num=#{num}
	</delete>	
	<update id="imgLocationUpdate" parameterType="model.MemberDto">
		update hb_member set imglocation=#{imglocation} where email=#{email} 
	</update>
	<update id="readWanted" parameterType="int">
		update hb_wanted set readcount=readcount+1 where num=#{num}
	</update>
	<update id="readUpcoming" parameterType="int">
		update hb_upcoming set readcount=readcount+1 where num=#{num}
	</update>
	<select id="getNewWanted" parameterType="String" resultType="model.WantedDto">
		select * from hb_wanted 
		where num=(select max(num) from hb_wanted where driver=#{driver})
	</select>
</mapper>


