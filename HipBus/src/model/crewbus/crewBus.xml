<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CrewBus">
<!-- 가입된 크루의 페이지인가? -->
	<select id="getCrewmembers" parameterType="String" resultType="model.CrewMemberDto">
		select c.email, c.crewid, c.leader, m.nick
		from hb_crewmember c, hb_member m 
		where c.email=m.email
		and crewid=#{crewid}
		and not leader=0
	</select>
	<select id="isMember" parameterType="map" resultType="int">
		select leader from hb_crewmember where crewid=#{crewid} and email=#{email}
	</select>
	<select id="isMem" parameterType="map" resultType="int">
		select count(*) from hb_crewmember where crewid=#{crewid} and email=#{email}
	</select>
<!-- crewBusLeft.jsp 크루정보가져오기 -->
	<select id="getCrewInfo" parameterType="String" resultType="model.CrewDto">
		select * from hb_crew where crewid=#{crewid}
	</select>
	
<!-- ourArticles -->
	<select id="getArticleCount" parameterType="java.util.List" resultType="int">
		select count(*) from hb_station where email in 
		<foreach collection="list" item="email" separator="," open="(" close=")">
			#{email,jdbcType=VARCHAR}
		</foreach>
		
	</select>
	<select id="getArticles" parameterType="map" resultType="model.StationDto">
		select num,email,category,nick,subject,content,likenum,readcount,reg_date,r 
		from( select num,email,category,nick,subject,content,likenum,readcount,reg_date, rownum r 
		     from (select distinct s.num,s.email,s.category,s.nick,s.subject,s.content,s.likenum,s.readcount,s.reg_date 
					from hb_station s,hb_crewmember cm 
					where s.email in 
						(select email from hb_crewmember where crewid=#{crewid})
					)
		     order by reg_date desc 
			) 
		where r &gt;= #{start} and r &lt;= #{end}
	</select>
<!-- 크루원신청 -->
	<insert id="applyCrew" parameterType="map">
		insert into hb_crewmember values(#{email},#{crewid},#{apply})
	</insert>
<!-- 신청크루원관리 -->
	<select id="getApplyMembers" parameterType="String" resultType="model.MemberDto">
		select m.email,m.imglocation,m.nick 
		from HB_Crewmember cm, HB_Member m
		where cm.email=m.email
		and cm.crewid=#{crewid}
		and cm.leader=0
	</select>
<!-- 신청수락 -->
	<update id="acceptMember" parameterType="map">
		update HB_Crewmember set leader=1 where crewid=#{crewid} and email=#{email}
	</update>
<!-- 신청거절 -->
	<delete id="ejectMember" parameterType="map">
		delete HB_Crewmember where crewid=#{crewid} and email=#{email}
	</delete>
<!-- 신청인? -->
	<select id="isApplied" parameterType="map" resultType="int">
		select count(*) from HB_Crewmember where crewid=#{crewid} and email=#{email}
	</select>
	
	<update id="updateLeader" parameterType="map">
		update hb_crewmember set leader=2 where email=#{email} and crewid=#{crewid} 
	</update>
	<update id="leaderChange" parameterType="map">
		update hb_crewmember set leader=1 where email=#{email} and crewid=#{crewid} 
	</update>
	
	
	
</mapper>