<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Admin">
	<!-- 관리자 현황 -->
  	<select id="memberGrade" resultType="int">
  		select count( * ) from hb_member
  	</select>
  	<select id="adminGrade" resultType="int">
  		select count( * ) from hb_member where mem_level=3
  	</select>
  	
  	<select id="numberOfCrew" resultType="int">
  		select count( * ) from hb_crew
  	</select>
  	<select id="numberOfPost" resultType="int">
  		select count( * ) from hb_station
  	</select>
  	
  	<!-- 멤버목록부르기 -->
	<select id="getMemberLists" resultType="model.MemberDto" parameterType="Map">
		select email, nick, mem_level, r from 
		(select email, nick, mem_level, rownum r from
		(select email, nick,mem_level from hb_member order by mem_level asc) 
		where mem_level=1 or mem_level=2 order by email asc) where r &gt;= #{pageStart} and r &lt;= #{pageEnd}

	</select>
	
	<!-- 크루리스트가져오기 -->
	<select id="getCrewId" resultType="model.CrewMemberDto">
		select m.email, c.crewid, c.crewname from hb_crew c, hb_crewmember m 
		where c.crewid=m.crewid
		and not m.leader=0
		order by m.email asc
	</select>
	
	<!-- 검색 -->
	<select id="getSearch" resultType="model.MemberDto" parameterType="Map">
		select email, nick, mem_level, r from 
		(select email, nick, mem_level, rownum r from
		(select email, nick,mem_level from hb_member order by mem_level asc) 
		where ${category} like '${keyword}%' or mem_level=1 and mem_level=2 order by email asc) where r &gt;= #{pageStart} and r &lt;= #{pageEnd}
	</select>
	
	<select id="searchNum" resultType="int" parameterType="Map">
		select count(*) from hb_member where ${category} like '${keyword}%' or mem_level=1 and mem_level=2
	</select>
	
	<!-- 수정 -->
	<update id="modifyGrade" parameterType="model.MemberDto">
		update hb_member set mem_level=#{mem_level} where email=#{email}
	</update>
	
	<!-- 삭제 -->
	<select id="crewLeader" parameterType="String" resultType="String">
		select crewid from hb_crewmember where email=#{email,jdbcType=VARCHAR} and leader=2
	</select>
	<select id="crewId" parameterType="String" resultType="model.MemberDto">
		select m.email, m.joindate from hb_crewmember c,hb_member m where c.email=m.email 
		and crewid=#{crewid} and leader=1 order by joindate asc 
	</select>
	<update id="updateLeader" parameterType="Map">
		update hb_crewmember set leader=2 where email=#{email} and crewid=#{crewid}
	</update>
	
	<delete id="deleteMember" parameterType="String">
		delete from hb_member where email=#{email}
	</delete>
	<delete id="deleteDriver" parameterType="String">
		delete from hb_driver where driver=#{email}
	</delete>
	
	<!-- 광고 -->
	<select id="adnumCheck" parameterType="int" resultType="int">
		select count(*) from hb_ad where ad_num=#{ad_num}
	</select>
	<select id="getData" parameterType="int" resultType="model.AdDto">
		select * from hb_ad where ad_num=#{ad_num}
	</select>
	<insert id="insertAd" parameterType="model.AdDto">
		insert into hb_ad 
		values (#{ad_num}, #{html}, #{imglocation})
	</insert>
	<update id="updateAd" parameterType="model.AdDto">
		update hb_ad set imglocation=#{imglocation}, html=#{html} 
		where ad_num=#{ad_num}
	</update>
	
	<!-- 관리자 정보 수정하기 -->
	<update id="updateAdmin" parameterType="model.MemberDto">
		update hb_member set nick=#{nick, jdbcType=VARCHAR}, passwd=#{passwd, jdbcType=VARCHAR}
		where email=#{email}
	</update>
	
	<!-- 관리자 등업 인증메일전송 -->
	<update id="updateValidate" parameterType="Map">
		update hb_verification set code=#{code} where email=#{email} 
	</update>
	<select id="validateCheck" parameterType="Map" resultType="int">
		select count(*) from hb_verification where email=#{iemail} and code=#{icode}
	</select>
	<update id="inviteCode" parameterType="String">
		update hb_verification set code= -1 where email=#{iemail}
	</update>
	
	<update id="gradAdmin" parameterType="String">
		update hb_member set mem_level=3 where email=#{iemail}
	</update>
	
	<!-- 관리자 메일 가져오기 -->
	<select id="getManagers" resultType="String">
		select email from HB_Member where mem_level = 3
	</select>
	
</mapper>